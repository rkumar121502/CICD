def server_name = ['server_ip']
pipeline {
    agent any
    stages {
        stage('Fetch Docker Image') {
            steps {
                script {
                    // Create a directory to store fetched Docker image
                    dir('docker_images') {
                        // Copy Docker image from the upstream job
                        copyArtifacts(projectName: 'nextjs_build', selector: lastSuccessful(), filter: 'nextjs.tar')
                    }
                }
            }
        }
        stage('Load Docker Image') {
            steps {
                script {
                    // Load the Docker image from the tar file
                    sh 'docker load -i docker_images/nextjs.tar'
                }
            }
        }
        stage(Deploy) {
      			environment{
                  //calling the creds
      		        login_cred=credentials('jenkinsSetupCreds')	
      		    }
            steps{
                echo "Proceeding with deployment to QA SERVER"
                script {
                    server_name.each{
                        def remote = [:]
                        remote.name = it
                        remote.host = it
                        remote.allowAnyHosts = true
                        remote.user = "$login_cred_USR"
                        remote.password = "$login_cred_PSW"
                        // pushing everything from jenkins workspace to remote server into staging directory
                        sshPut remote: remote, from: "./", filterRegex : /.$/,  into: "/D:/Staging/"
                        // running the container out of the image on port 3000 of server IP
                        sshCommand remote: remote, command: 'docker run -itd -p 3000:3000 --name nextJS nextjs', failOnError: 'true'
                    }
                }
            }
        }
    }
}
